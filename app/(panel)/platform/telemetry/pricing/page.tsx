"use client"

import { useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/shared/components/ui/card"
import { Input } from "@/shared/components/ui/input"
import { Label } from "@/shared/components/ui/label"
import { Tabs, TabsList, TabsTrigger } from "@/shared/components/ui/tabs"
import { Clock, DollarSign, Sparkles, Calculator } from "lucide-react"
import { Badge } from "@/shared/components/ui/badge"

export default function PricingPage() {
  const [inputTokens, setInputTokens] = useState<number>(1000)
  const [outputTokens, setOutputTokens] = useState<number>(500)
  const [isDiscountTime, setIsDiscountTime] = useState<boolean>(false)

  // Calculate costs
  const inputCost = (inputTokens / 1000000) * 2 // $2 per million input tokens
  const outputCost = (outputTokens / 1000000) * 4 // $4 per million output tokens
  const totalCost = inputCost + outputCost
  const discountedCost = totalCost * 0.25 // 75% discount
  const finalCost = isDiscountTime ? discountedCost : totalCost

  return (
    <div className="space-y-8 p-6 border border-white/20 rounded-lg bg-background/50">
      <div>
        <h1 className="text-3xl font-bold tracking-tight">Pricing</h1>
        <p className="text-sm text-muted-foreground mt-2">Transparent pricing for Swarms API usage</p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card className="border border-white/20 bg-card hover:border-white/30 transition-colors">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <DollarSign className="h-5 w-5 text-foreground/60" />
              Token Pricing
            </CardTitle>
            <CardDescription>Our simple and transparent pricing model</CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 gap-4">
              <div className="bg-muted/50 p-4 rounded-lg border border-white/20">
                <div className="flex justify-between items-center mb-2">
                  <h3 className="font-medium">Input Tokens</h3>
                  <Badge variant="outline" className="border-white/30 text-foreground">
                    $2.00 / million
                  </Badge>
                </div>
                <p className="text-sm text-muted-foreground">
                  Tokens used in prompts, instructions, and other inputs to the API
                </p>
              </div>

              <div className="bg-muted/50 p-4 rounded-lg border border-white/20">
                <div className="flex justify-between items-center mb-2">
                  <h3 className="font-medium">Output Tokens</h3>
                  <Badge variant="outline" className="border-white/30 text-foreground">
                    $4.00 / million
                  </Badge>
                </div>
                <p className="text-sm text-muted-foreground">
                  Tokens generated by the model in response to your inputs
                </p>
              </div>
            </div>

            <div className="bg-amber-50 dark:bg-amber-950/20 p-4 rounded-lg border border-amber-200 dark:border-amber-800/50">
              <div className="flex items-start gap-3">
                <Clock className="h-5 w-5 text-amber-600 mt-0.5" />
                <div>
                  <h3 className="font-medium text-amber-800 dark:text-amber-200">Off-Peak Discount</h3>
                  <p className="text-sm text-amber-700 dark:text-amber-300 mt-1">
                    Enjoy a <span className="font-bold">75% discount</span> on all token pricing from 8:00 PM to 6:00 AM
                    PST.
                  </p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="border border-white/20 bg-card hover:border-white/30 transition-colors">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Calculator className="h-5 w-5 text-foreground/60" />
              Cost Calculator
            </CardTitle>
            <CardDescription>Estimate your costs based on token usage</CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="input-tokens">Input Tokens</Label>
                <Input
                  id="input-tokens"
                  type="number"
                  min="0"
                  value={inputTokens}
                  onChange={(e) => setInputTokens(Number.parseInt(e.target.value) || 0)}
                  className="bg-background border border-white/20"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="output-tokens">Output Tokens</Label>
                <Input
                  id="output-tokens"
                  type="number"
                  min="0"
                  value={outputTokens}
                  onChange={(e) => setOutputTokens(Number.parseInt(e.target.value) || 0)}
                  className="bg-background border border-white/20"
                />
              </div>

              <div className="space-y-2">
                <Label>Off-Peak Hours</Label>
                <div className="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    id="discount-time"
                    checked={isDiscountTime}
                    onChange={(e) => setIsDiscountTime(e.target.checked)}
                    className="rounded border-white/20"
                  />
                  <Label htmlFor="discount-time" className="text-sm">
                    Apply 75% discount (8:00 PM - 6:00 AM PST)
                  </Label>
                </div>
              </div>
            </div>

            <div className="bg-muted/50 p-4 rounded-lg border border-white/20">
              <div className="space-y-2">
                <div className="flex justify-between text-sm">
                  <span>Input Cost:</span>
                  <span>${inputCost.toFixed(4)}</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>Output Cost:</span>
                  <span>${outputCost.toFixed(4)}</span>
                </div>
                {isDiscountTime && (
                  <div className="flex justify-between text-sm text-amber-600">
                    <span>Discount Applied:</span>
                    <span>-${(totalCost - discountedCost).toFixed(4)}</span>
                  </div>
                )}
                <div className="border-t border-white/20 pt-2 mt-2">
                  <div className="flex justify-between font-medium">
                    <span>Total Cost:</span>
                    <span>${finalCost.toFixed(4)}</span>
                  </div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      <Card className="border border-white/20 bg-card">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Sparkles className="h-5 w-5 text-foreground/60" />
            Additional Features
          </CardTitle>
          <CardDescription>What&apos;s included with your Swarms API usage</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <div className="flex items-start gap-3">
                <div className="w-2 h-2 bg-foreground rounded-full mt-2 flex-shrink-0"></div>
                <div>
                  <h4 className="font-medium">Real-time Analytics</h4>
                  <p className="text-sm text-muted-foreground">
                    Monitor your usage, costs, and performance in real-time
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="w-2 h-2 bg-foreground rounded-full mt-2 flex-shrink-0"></div>
                <div>
                  <h4 className="font-medium">Detailed Logging</h4>
                  <p className="text-sm text-muted-foreground">
                    Comprehensive logs for debugging and optimization
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="w-2 h-2 bg-foreground rounded-full mt-2 flex-shrink-0"></div>
                <div>
                  <h4 className="font-medium">Cost Optimization</h4>
                  <p className="text-sm text-muted-foreground">
                    Tools to help you optimize your token usage and costs
                  </p>
                </div>
              </div>
            </div>
            <div className="space-y-4">
              <div className="flex items-start gap-3">
                <div className="w-2 h-2 bg-foreground rounded-full mt-2 flex-shrink-0"></div>
                <div>
                  <h4 className="font-medium">API Rate Limits</h4>
                  <p className="text-sm text-muted-foreground">
                    Generous rate limits to support high-volume applications
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="w-2 h-2 bg-foreground rounded-full mt-2 flex-shrink-0"></div>
                <div>
                  <h4 className="font-medium">24/7 Support</h4>
                  <p className="text-sm text-muted-foreground">
                    Technical support available around the clock
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="w-2 h-2 bg-foreground rounded-full mt-2 flex-shrink-0"></div>
                <div>
                  <h4 className="font-medium">No Hidden Fees</h4>
                  <p className="text-sm text-muted-foreground">
                    Transparent pricing with no setup or maintenance fees
                  </p>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

